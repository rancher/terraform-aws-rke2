if [ -z "${name}" ]; then
	echo "entering dev environment..."

  nix develop \
    --ignore-environment \
    --extra-experimental-features nix-command \
    --extra-experimental-features flakes \
    --keep HOME \
    --keep SSH_AUTH_SOCK \
    --keep GITHUB_TOKEN \
    --keep AWS_ROLE \
    --keep AWS_REGION \
    --keep AWS_DEFAULT_REGION \
    --keep AWS_ACCESS_KEY_ID \
    --keep AWS_SECRET_ACCESS_KEY \
    --keep AWS_SESSION_TOKEN \
    --keep TERM \
    $(pwd)
else
	echo "setting up dev environment..."

	source .functions
	source .variables
	source .rcs
	source .aliases

	if [ -z "$SSH_AUTH_SOCK" ]; then eval $(ssh-agent -s); fi
	echo ${AGE_SECRET_KEY} | age -d -i - -o ~/.ssh/ssh_key ssh.age
	chmod 0600 ~/.ssh/ssh_key
	ssh-add ~/.ssh/ssh_key

	if [ -z "$(env | grep 'AWS')" ]; then
		echo "Unable to find AWS authentication information in the environment, please make sure you authenticate with AWS.";
	fi
	if [ -z "$(env | grep 'GITHUB_TOKEN')" ]; then
		echo "Unable to find GITHUB authentication information in the environment, please make sure you authenticate with GITHUB.";
	fi
	if [ -z "$(env | grep 'AGE_')" ]; then
		echo "Unable to find AGE information in the environment, please make sure you load AGE key to decrypt state.";
	fi
	if [ -z "$(env | grep 'TF_CLI_ARGS')" ]; then
		echo "Unable to find terraform cli args information in the environment, please make sure you set TF_CLI_ARGS='--state=/tmp/terraform.tfstate' to load the decrypted state.";
	fi
fi
